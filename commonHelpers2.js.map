{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nconst inputForm = document.querySelector('input[name=\"delay\"]');\nconst inputFulfilled= document.querySelector('input[value=\"fulfilled\"]');\nconst form = document.querySelector('.form-snackbar');\n\nform.addEventListener(\"submit\", createPromise);\n\nfunction createPromise(event) {\n  event.preventDefault();\n  const delay = inputForm.value;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => { \n    if (inputFulfilled.checked) {\n      resolve(`Fulfilled promise in ${delay}ms`);\n    } else {\n      reject(`Rejected promise in ${delay}ms`);\n    }\n  }, delay);\n});\n\npromise.then(\n  value => {\n    iziToast.success({\n      color:'#59A10D', position: 'topRight', messageColor: '#FAFAFB', iconColor: '#FFFFFF',\n    message: `Fulfilled promise in ${delay}ms`,\n}); \n  },\n  error => {\n    iziToast.error({\n    color: '#B51B1B', position: 'topRight', messageColor: '#FAFAFB', iconColor: '#FFFFFF',\n    message: `Rejected promise in ${delay}ms`,\n});\n  }\n);\n};\n\n\n"],"names":["inputForm","inputFulfilled","form","createPromise","event","delay","resolve","reject","value","iziToast","error"],"mappings":"mIAEA,MAAMA,EAAY,SAAS,cAAc,qBAAqB,EACxDC,EAAgB,SAAS,cAAc,0BAA0B,EACjEC,EAAO,SAAS,cAAc,gBAAgB,EAEpDA,EAAK,iBAAiB,SAAUC,CAAa,EAE7C,SAASA,EAAcC,EAAO,CAC5BA,EAAM,eAAc,EACpB,MAAMC,EAAQL,EAAU,MACR,IAAI,QAAQ,CAACM,EAASC,IAAW,CAC/C,WAAW,IAAM,CACbN,EAAe,QACjBK,EAAQ,wBAAwBD,CAAK,IAAI,EAEzCE,EAAO,uBAAuBF,CAAK,IAAI,CAE1C,EAAEA,CAAK,CACV,CAAC,EAEO,KACNG,GAAS,CACPC,EAAS,QAAQ,CACf,MAAM,UAAW,SAAU,WAAY,aAAc,UAAW,UAAW,UAC7E,QAAS,wBAAwBJ,CAAK,IAC1C,CAAC,CACE,EACDK,GAAS,CACPD,EAAS,MAAM,CACf,MAAO,UAAW,SAAU,WAAY,aAAc,UAAW,UAAW,UAC5E,QAAS,uBAAuBJ,CAAK,IACzC,CAAC,CACE,CACH,CACA"}